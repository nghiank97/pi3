#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/module.h>
#include <linux/device.h>
#include <linux/err.h>
#include <linux/delay.h>
#include <asm/io.h>

#define BCM2835_PERI_BASE      (0x3F000000)
#define GPIO_BASE              (BCM2835_PERI_BASE + 0x200000)

#define BLOCK_SIZE 4096
#define GPFSEL0    0x00
#define GPFSEL1    0x04
#define GPFSEL2    0x08
#define GPSET0     0x1C
#define GPCLR0     0x28

volatile unsigned int __iomem *gpio;

static int __init module_start(void){
	pr_info(": start\n");
	gpio = ioremap(GPIO_BASE, 4096);
	if (gpio == NULL) {
		pr_info(": io remap failed\n");
		iounmap(gpio);
		return -1;
	}
	gpio[GPFSEL0/4] &=~ (7 << 6);
	gpio[GPFSEL0/4] |= (1 << 6);
	for(int i = 0; i < 5; i++){
		gpio[GPSET0/4] |= (1 << 2);
		pr_info(": LED OFF\n");
		mdelay(1000);
		
		gpi
		gpio[GPCLR0/4] &=~ (1 << 2);
		pr_info(": LED ON\n");
		mdelay(1000);
	}
	return 0;
}

static void __exit module_end(void){
	gpio[GPSET0/4] |= (1 << 2);
	pr_info(": LED OFF\n");
	iounmap(gpio);
	pr_info(": end\n");
}

module_init(module_start);
module_exit(module_end);

MODULE_LICENSE("GPL");
MODULE_AUTHOR("knghia");
MODULE_VERSION("0:0.1");
